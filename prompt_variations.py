import random

class PromptGenerator:
    """Класс для генерации вариативных промптов для избежания повторов"""
    
    def __init__(self):
        self.prompts = {
            "завтрак": [
                """Ты - персональный кулинарный помощник Тани. Предложи простое блюдо для завтрака.
                
Категория: завтрак

Требования:
- Предложи ТОЛЬКО ОДНО блюдо
- Отвечай ТОЛЬКО названием блюда (максимум 4-5 слов)
- Блюдо должно быть простым для домашнего приготовления
- Учитывай русскую/европейскую кухню
- Никаких объяснений и инструкций

{avoid_text}

Пример ответа: "Овсянка с ягодами" """,

                """Помоги Тане выбрать что приготовить на завтрак. Нужно что-то простое и вкусное.

Категория: завтрак

Требования:
- ОДНО блюдо
- Только название (максимум 4-5 слов)
- Простое в приготовлении
- Домашняя кухня
- Без лишних слов

{avoid_text}

Пример: "Творожные сырники" """,

                """Предложи Тане идею для завтрака. Что-то nutritious и несложное.

Для: завтрак

Нужно:
- Одно блюдо
- Краткое название (до 5 слов)
- Легко готовить дома
- Обычная кухня
- Только название

{avoid_text}

Как: "Яичница с зеленью" """
            ],
            
            "обед": [
                """Ты - кулинарный помощник Тани. Предложи блюдо для обеда.

Категория: обед

Требования:
- Предложи ТОЛЬКО ОДНО блюдо  
- Отвечай ТОЛЬКО названием блюда (максимум 4-5 слов)
- Блюдо должно быть простым для домашнего приготовления
- Учитывай русскую/европейскую кухню
- Никаких объяснений и инструкций

{avoid_text}

Пример ответа: "Куриный суп с лапшой" """,

                """Помоги Тане с идеей для обеда. Нужно что-то сытное и домашнее.

Категория: обед

Требования:
- ОДНО блюдо
- Только название (максимум 4-5 слов)
- Простое в приготовлении  
- Домашняя кухня
- Без объяснений

{avoid_text}

Пример: "Рис с овощами" """,

                """Предложи Тане что приготовить на обед. Что-то вкусное и несложное.

Для: обед

Нужно:
- Одно блюдо
- Краткое название (до 5 слов)
- Легко готовить дома
- Привычная еда
- Только название

{avoid_text}

Как: "Макароны с фаршем" """
            ],
            
            "ужин": [
                """Ты - персональный кулинарный помощник Тани. Предложи блюдо для ужина.

Категория: ужин

Требования:
- Предложи ТОЛЬКО ОДНО блюдо
- Отвечай ТОЛЬКО названием блюда (максимум 4-5 слов)
- Блюдо должно быть простым для домашнего приготовления
- Учитывай русскую/европейскую кухню
- Никаких объяснений и инструкций

{avoid_text}

Пример ответа: "Запеченная рыба с картофелем" """,

                """Помоги Тане выбрать ужин. Нужно что-то легкое но сытное.

Категория: ужин

Требования:
- ОДНО блюдо
- Только название (максимум 4-5 слов)
- Простое в приготовлении
- Домашняя кухня
- Без лишних слов

{avoid_text}

Пример: "Салат с курицей" """,

                """Предложи Тане идею для ужина. Что-то вкусное для вечера.

Для: ужин

Нужно:
- Одно блюдо
- Краткое название (до 5 слов)
- Легко готовить дома
- Обычная кухня
- Только название

{avoid_text}

Как: "Котлеты с пюре" """
            ]
        }
    
    def get_random_prompt(self, meal_type, avoid_text=""):
        """Получить случайный промпт для категории еды"""
        if meal_type not in self.prompts:
            meal_type = "обед"  # fallback
        
        prompt_template = random.choice(self.prompts[meal_type])
        return prompt_template.format(avoid_text=avoid_text)

# Глобальный экземпляр генератора
prompt_generator = PromptGenerator()